- name: Install Workstation Cron
  template:
    src: templates/crontab.j2
    dest: /etc/crontab

- include_vars:
    file: 'host_vars/{{ ansible_hostname }}.yaml'

- name: Install Role Dependencies
  package:
    name: gnupg2
    state: present

- name: SSH Authorized Keys from Github
  ansible.posix.authorized_key:
    user: '{{ workstation_user }}'
    state: present
    key: '{{ ssh_authorized_keys_url }}'

- name: Add Hashicorp APT Key
  apt_key:
    url: https://apt.releases.hashicorp.com/gpg
    state: present

- name: Install Hashicorp Repository
  apt_repository:
    repo: "deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
    state: present

- name: Install Neovim Unstable Repository
  apt_repository:
    repo: ppa:neovim-ppa/unstable
    state: present

- name: Check if Mirantis Lens is installed
  stat:
    path: /usr/bin/lens
  register: stat_lens

- name: Install Mirantis Lens
  apt:
    deb: "{{ mirantis_lens_url }}"
  when: not stat_lens.stat.exists

- name: Check if Mattermost is installed
  stat:
    path: /usr/bin/mattermost-desktop
  register: stat_mattermost

- name: Install Mattermost
  apt:
    deb: "{{ mattermost_url }}"
  when: not stat_mattermost.stat.exists

- name: Check if Obsidian is installed
  stat:
    path: /usr/bin/obsidian
  register: stat_obsidian

- name: Install Obsidian
  apt:
    deb: "{{ obsidian_url }}"
  when: not stat_obsidian.stat.exists

- name: Install Slack Nebula
  ansible.builtin.unarchive:
    src: "{{ nebula_url }}"
    dest: /usr/local/bin
    remote_src: yes

- name: Install Packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ packages }}"

- name: Install Doom Emacs
  ansible.builtin.git:
    repo: https://github.com/hlissner/doom-emacs
    dest: "/home/{{ workstation_user }}/.emacs.d"
    depth: 1 

- name: Ubuntu 20.x Virtualization Host
  block:
    - name: Install Vagrant
      package:
        name: vagrant
        state: present
    - name: Check if VMWare Workstation Player is installed
      stat:
        path: /usr/bin/vmplayer
      register: stat_vmplayer
    
    - name: Install VMWare Workstation Player
      block:
        - name: Create VMWare Download Directory
          file:
            name: "{{ vmware_workstation_download_directory }}"
            state: directory
        
        - name: Get VMWare Workstation
          get_url:
            url: "{{ vmware_workstation_url }}"
            dest: "{{ vmware_workstation_download_directory }}/vmware.bundle"
            mode: '0755'
        
        - name: Install VMWare Workstation
          script:
            cmd: "{{ vmware_workstation_download_directory }}/vmware.bundle"
        
        - name: Remove VMWare Install Files
          file:
            name: "{{ vmware_workstation_download_directory }}"
            state: absent
      when: not stat_vmplayer.stat.exists
  when: ansible_virtualization_role == "host"
