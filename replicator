#!/usr/bin/env bash
set -exuo pipefail

export REPLICATOR_DIR="${REPLICATOR_DIR:=/opt/replicator}"
export REPLICATOR_SCRIPT_LINK="${REPLICATOR_SCRIPT_LINK:=/usr/local/bin/replicator}"
export REPLICATOR_REPO="${REPLICATOR_REPO:=https://github.com/oogy/replicator}"
export REPLICATOR_BRANCH_OR_TAG="${REPLICATOR_BRANCH:=main}"
export REPLICATOR_CONFIG_REPO="${REPLICATOR_CONFIG_REPO:=https://github.com/oogy/replicate}"
export REPLICATOR_CONFIG_BRANCH_OR_TAG="${REPLICATOR_BRANCH:=main}"
export REPLICATOR_CONFIG_DIR="${REPLICATOR_CONFIG_DIR:=/var/lib/replicator}"

install(){
	if [ ! -d ${REPLICATOR_DIR} ]; then
		get_replicator
	fi
	
	if [ ! -L ${REPLICATOR_SCRIPT_LINK} ]; then
		ln -s ${REPLICATOR_DIR}/replicator ${REPLICATOR_SCRIPT_LINK}
	fi
	
	if [ ! -d ${REPLICATOR_CONFIG_DIR} ]; then
		mkdir -p ${REPLICATOR_CONFIG_DIR}
		get_config
	fi
}

get_replicator(){
	git clone ${REPLICATOR_REPO} ${REPLICATOR_DIR}
	git checkout ${REPLICATOR_BRANCH_OR_TAG}
}

get_config(){
	git clone ${REPLICATOR_CONFIG_REPO} /var/lib/replicator/config
	git checkout ${REPLICATOR_CONFIG_BRANCH_OR_TAG}
}


update(){
	update_config
}

upgrade(){
	pushd ${REPLICATOR_DIR}
	git pull origin ${REPLICATOR_BRANCH_OR_TAG}	
	popd
}

update_config(){
	pushd ${REPLICATOR_CONFIG_DIR}
	git pull origin ${REPLICATOR_CONFIG_BRANCH_OR_TAG}
	popd
}

apply(){
	echo "TODO"
}

if [ $# -gt 0 ]; then
	case $1 in
		install)
			install
			;;
		update)
			update
			;;
		upgrade)
			upgrade
			;;
		apply)
			apply
			;;
	esac
fi
